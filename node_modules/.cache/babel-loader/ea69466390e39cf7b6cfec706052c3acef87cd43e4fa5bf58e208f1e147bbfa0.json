{"ast":null,"code":"import _slicedToArray from\"D:/Projects/REACT/textutils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./App.css\";import Navbar from\"./components/Navbar\";import TextForm from\"./components/TextForm\";import Alert from\"./components/Alert\";// import About from \"./components/About\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// whether dark mode is enabled or not\nvar toggleMode=function toggleMode(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#051332\";document.title=\"Textutils - Dark Mode\";showAlert(\"Dark mode has been enabled\",\"success\");// setInterval(() => {\n//   document.title = \"Textutils is awesome\"\n// }, 997);\n// setInterval(() => {\n//   document.title = \"Install textutils now!\";\n// }, 1453);\n}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";document.title=\"Textutils - Light Mode\";showAlert(\"Light mode has been enabled\",\"success\");}};var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",aboutText:\"About Textutils\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter text to analyze\",mode:mode,showAlert:showAlert})})]});}export default App;","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","toggleMode","document","body","style","backgroundColor","title","showAlert","_useState3","_useState4","alert","setAlert","message","type","msg","setTimeout","children","aboutText","className","heading"],"sources":["D:/Projects/REACT/textutils/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#051332\";\n      document.title = \"Textutils - Dark Mode\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n      // setInterval(() => {\n      //   document.title = \"Textutils is awesome\"\n      // }, 997);\n\n      // setInterval(() => {\n      //   document.title = \"Install textutils now!\";\n      // }, 1453);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"Textutils - Light Mode\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Textutils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />}></Route> */}\n          {/* <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\" mode={mode} showAlert={showAlert} />}> */}\n          <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Routes> */}\n        </div>  \n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"iHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwBX,QAAQ,CAAC,OAAO,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAuB;AAE3C,GAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAIF,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CH,QAAQ,CAACI,KAAK,CAAG,uBAAuB,CACxCC,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CAElD;AACA;AACA;AAEA;AACA;AACA;AACF,CAAC,IAAM,CACLP,OAAO,CAAC,OAAO,CAAC,CAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CH,QAAQ,CAACI,KAAK,CAAG,wBAAwB,CACzCC,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,IAAAC,UAAA,CAA0BvB,QAAQ,CAAC,IAAI,CAAC,CAAAwB,UAAA,CAAAX,cAAA,CAAAU,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAF,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIK,OAAO,CAAEC,IAAI,CAAK,CACnCF,QAAQ,CAAC,CACPG,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CAEFE,UAAU,CAAC,UAAM,CACfJ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,mBACEjB,KAAA,CAAAF,SAAA,EAAAwB,QAAA,eAEI1B,IAAA,CAACJ,MAAM,EACLoB,KAAK,CAAC,WAAW,CACjBW,SAAS,CAAC,iBAAiB,CAC3BlB,IAAI,CAAEA,IAAK,CACXE,UAAU,CAAEA,UAAW,CACxB,CAAC,cACFX,IAAA,CAACF,KAAK,EAACsB,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBpB,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAI7B1B,IAAA,CAACH,QAAQ,EAACgC,OAAO,CAAC,uBAAuB,CAAEpB,IAAI,CAAEA,IAAK,CAACQ,SAAS,CAAEA,SAAU,CAAE,CAAC,CAG5E,CAAC,EAER,CAAC,CAEP,CAEA,cAAe,CAAAZ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}